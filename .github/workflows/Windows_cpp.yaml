# Windows builds.
name: Windows_cpp

on:
  push:
    paths:
      - "!.github/**"
      - ".github/workflows/Windows_cpp.yaml"
      - "cpp/**"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # explicit include-based build matrix, of known valid options
      matrix:
        include:
          - os: windows-2022
            visual_studio: "Visual Studio 17 2022"

          - os: windows-2019
            visual_studio: "Visual Studio 16 2019"


    env:
      cpp_dir: "./cpp"
      build_dir: "./build"
      config: "Release"

    steps:
    - uses: actions/checkout@v2

    - name: cmake version
      shell: bash
      run: cmake --version

    - name: Configure CMake
      working-directory: ${{ env.cpp_dir }}
      id: configure
      shell: bash
      run: cmake . -B ${{ env.build_dir }} -G "${{ matrix.visual_studio }}" -A x64 

    - name: Configure Error Processing
      if: ${{ (failure() && steps.configure.outcome == 'failure') || success() }}
      working-directory: ${{ env.cpp_dir }}\${{ env.build_dir }}
      shell: bash
      run: |
          if [[ -f "CMakeFiles/CMakeOutput.log" ]]; then
            echo "---- CMakeFiles/CMakeOutput.log"
            cat CMakeFiles/CMakeOutput.log
            echo "----"
          fi
          if [[ -f "CMakeFiles/CMakeError.log" ]]; then
            echo "---- CMakeFiles/CMakeError.log"
            cat CMakeFiles/CMakeError.log
            echo "----"
          fi
    - name: Build
      working-directory: ${{ env.cpp_dir }}
      run: cmake --build ${{ env.build_dir }} --config ${{ env.config }} --target ALL_BUILD --verbose

    - name: Run tests
      working-directory: ${{ env.cpp_dir }}
      run: ${{ env.build_dir }}\${{ env.config }}\Google_Tests_run.exe
